{
  "_from": "keyword-extractor",
  "_id": "keyword-extractor@0.0.15",
  "_inBundle": false,
  "_integrity": "sha1-GTFX3GIw8b6B8xR1Z+6PFiZ9jic=",
  "_location": "/keyword-extractor",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "keyword-extractor",
    "fetchSpec": "latest",
    "name": "keyword-extractor",
    "raw": "keyword-extractor",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/keyword-extractor/-/keyword-extractor-0.0.15.tgz",
  "_shasum": "193157dc6230f1be81f3147567ee8f16267d8e27",
  "_spec": "keyword-extractor",
  "_where": "/Users/Austin/Development/projects/Acamedia",
  "author": {
    "email": "michael@delorenzodesign.com",
    "name": "Michael De Lorenzo",
    "url": "http://mikedelorenzo.com"
  },
  "bugs": {
    "url": "https://github.com/michaeldelorenzo/keyword-extractor/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Marcos Sanz",
      "email": "marcossanzlatorre@gmail.com",
      "url": "http://www.mistersanz.com"
    },
    {
      "name": "d-oliveros",
      "url": "https://github.com/d-oliveros"
    },
    {
      "name": "Abhijeet Sutar",
      "email": "ajduke@about.me",
      "url": "https://github.com/ajduke"
    },
    {
      "name": "janvde",
      "url": "https://github.com/janvde"
    },
    {
      "name": "Alex Gustafsson",
      "url": "https://github.com/AlexGustafsson"
    }
  ],
  "dependencies": {
    "underscore": "1.7.0",
    "underscore.string": "2.3.3"
  },
  "deprecated": false,
  "description": "Module for creating a keyword array from a string and excluding stop words.",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "homepage": "https://github.com/michaeldelorenzo/keyword-extractor",
  "keywords": [
    "extract",
    "keyword",
    "search",
    "text"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/michaeldelorenzo/keyword-extractor/raw/master/LICENSE"
    }
  ],
  "main": "./index",
  "name": "keyword-extractor",
  "optionalDependencies": {},
  "readme": "# Keyword Extractor\r\n\r\nA simple [NPM package](https://npmjs.org/package/keyword-extractor) for extracting _keywords_ from a string by\r\nremoving stopwords.\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install keyword-extractor\r\n```\r\n\r\n## Running tests\r\n\r\nTo run the test suite, first install the development dependencies by running the following command within the package's\r\ndirectory.\r\n\r\n```sh\r\n$ npm install\r\n```\r\n\r\nTo execute the package's tests, run:\r\n\r\n``` sh\r\n$ make test\r\n```\r\n\r\n## Usage of the Module\r\n\r\n```javascript\r\n//  include the Keyword Extractor\r\nvar keyword_extractor = require(\"keyword-extractor\");\r\n\r\n//  Opening sentence to NY Times Article at\r\n//  http://www.nytimes.com/2013/09/10/world/middleeast/surprise-russian-proposal-catches-obama-between-putin-and-house-republicans.html\r\nvar sentence = \"President Obama woke up Monday facing a Congressional defeat that many in both parties believed could hobble his presidency.\"\r\n\r\n//  Extract the keywords\r\nvar extraction_result = keyword_extractor.extract(sentence,{\r\n                                                                language:\"english\",\r\n                                                                remove_digits: true,\r\n                                                                return_changed_case:true,\r\n                                                                remove_duplicates: false\r\n\r\n                                                           });\r\n\r\n/*\r\n  extraction result is:\r\n\r\n  [\r\n        \"president\",\r\n        \"obama\",\r\n        \"woke\",\r\n        \"monday\",\r\n        \"facing\",\r\n        \"congressional\",\r\n        \"defeat\",\r\n        \"parties\",\r\n        \"believed\",\r\n        \"hobble\",\r\n        \"presidency\"\r\n    ]\r\n*/\r\n```\r\n\r\n### Options Parameters\r\n\r\nThe second argument of the _extract_ method is an Object of configuration/processing settings for the extraction.\r\n\r\nParameter Name | Description | Permitted Values\r\n---------------|-------------|-----------------\r\nlanguage       | The stopwords list to use. | _english_, _spanish_, _polish_, _german_, _french_, _italian_, _dutch_, _russian_,_portuguese_,_swedish_,\r\nremove_digits | Removes all digits from the results if set to true | _true_ or _false_\r\nreturn_changed_case | The case of the extracted keywords. Setting the value to _true_ will return the results all lower-cased, if _false_ the results will be in the original case. | _true_ or _false_\r\nreturn_chained_words | Instead of returning each word separately, join the words that were originally together. Setting the value to _true_ will join the words, if _false_ the results will be splitted on each array element. | _true_ or _false_\r\nremove_duplicates | Removes the duplicate keywords | _true_ , _false_ (defaults to _false_ )\r\nremove_max_ngrams | Returns keywords that are ngrams with size 0-_integer_  | _integer_ , _false_ (defaults to _false_ )\r\n\r\n\r\n## Credits\r\n\r\nThe initial stopwords lists are taken from the following sources:\r\n\r\n- English [http://jmlr.org/papers/volume5/lewis04a/a11-smart-stop-list/english.stop]\r\n- Spanish [https://stop-words.googlecode.com/svn/trunk/stop-words/stop-words/stop-words-spanish.txt]\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/michaeldelorenzo/keyword-extractor.git"
  },
  "version": "0.0.15"
}
