{
  "_from": "sync-each",
  "_id": "sync-each@1.0.1",
  "_inBundle": false,
  "_integrity": "sha1-tob6fVhmCP/P/veF+aQxTOo6F08=",
  "_location": "/sync-each",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sync-each",
    "fetchSpec": "latest",
    "name": "sync-each",
    "raw": "sync-each",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sync-each/-/sync-each-1.0.1.tgz",
  "_shasum": "b686fa7d586608ffcffef785f9a4314cea3a174f",
  "_spec": "sync-each",
  "_where": "/Users/Austin/Development/projects/Acamedia",
  "author": {
    "name": "Paul Miller",
    "url": "http://whipstercz.com/"
  },
  "bugs": {
    "url": "https://github.com/whipstercz/sync-each/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "No-bullshit, ultra-simple, 35-lines-of-code synchronized forEach / map function for JavaScript.",
  "devDependencies": {},
  "homepage": "https://github.com/whipstercz/async-each/",
  "keywords": [
    "array",
    "concurrent",
    "control flow",
    "each",
    "flow",
    "forEach",
    "iterate",
    "iteration",
    "loop",
    "map",
    "sync",
    "synchronous"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "sync-each",
  "optionalDependencies": {},
  "readme": "# sync-each\r\n\r\nNo-bullshit, ultra-simple, 35-lines-of-code synchronized forEach function for JavaScript.\r\n\r\nFor browsers and node.js.\r\n\r\n## Installation\r\n* Just include sync-each before your scripts.\r\n* `npm install sync-each` if you’re using node.js.\r\n* `bower install sync-each` if you’re using [Bower](http://bower.io).\r\n\r\n## Usage\r\n\r\n* `each(array, iterator, callback);` — `Array`, `Function`, `(optional) Function`\r\n* `iterator(item, next)` receives current item and a callback that will mark the item as done. `next` callback receives optional `error, transformedItem` arguments.\r\n* `callback(error, transformedArray)` optionally receives first error and transformed result `Array`.\r\n\r\n```javascript\r\nvar each = require('sync-each');\r\neach(items, \r\n\tfunction (items,next) {\r\n\t\t\t//perform async operation with item\r\n\t\t\tnext(err,transformed)\r\n\t},\r\n\tfunction (err,transformedItems) {\r\n\t\t\t//Success callback\r\n\t}\r\n)\r\n\r\n\r\n// Alternatively in browser:\r\nsyncEach(list, fn, callback);\r\n```\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/whipstercz/sync-each.git"
  },
  "version": "1.0.1"
}
